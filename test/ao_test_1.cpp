/* Copyright 2019 PIMath project contributors. All Rights Reserved.
 *
 * Licensed under the MIT license.
 *
 * Version: 1.1.1
 */

#include "../src/Algebraic_Operations.h"
#include <bits/stdc++.h>

// Example 1: Basic Algebraic Operations

int main()
{
	clock_t start, end;
	start = clock();

	string a, b;

	const char * p1 = "-19282.73";
	const char * p2 = "      923.1920384"; // Spaces in front of the number will be ignored.

	const char * pi = "3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235378759375195778185778053217122680661300192787661119590921642019893809525720106548586328";
	const char * e = "2.71828182845904523536028747135266249775724709369995957496696762772407663035354759457138217852516642742746639193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901157383418793070215408914993488416750924476146066808226480016847741185374234544243710753907774499206955170276183860626133138458300075204493382656029760673711320070932870912744374704723069697720931014169283681902551510865746377211125238978442505695369677078544996996794686445490598793163688923009879312773617821542499922957635148220826989519366803318252886939849646510582093923982948879332036250944311730123819706841614039701983767932068328237646480429531180232878250981945581530175671736133206981125099618188159304169035159888851934580727386673858942287922849989208680582574927961048419844436346324496848756023362482704197862320900216099023530436994184914631409343173814364054625315209618369088870701676839642437814059271456354906130310720851038375051011574770417189861068739696552126715468895703503540212340784981933432107";

	Algebraic_Operations <const char *> * f1 = new Algebraic_Operations <const char *> (p1, p2);

	tie(a, b) = f1->division(6, true); // Keep six decimal places and calculate the modulo.

	cout << "-19282.73 + 923.1920384 = " << f1->addition() << "\n\n";
	cout << "-19282.73 - 923.1920384 = " << f1->subtraction() << "\n\n";
	cout << "-19282.73 * 923.1920384 = " << f1->multiplication() << "\n\n";

	cout << "-19282.73 ^ 4 = " << f1->multiplication(true, 4) << "\n\n"; // This calculates p1 to the fourth power.

	cout << "-19282.73 / 923.1920384 = " << a << " (6 decimal places)\n\n-19282.73 mod 923.1920384 = " << b << "\n\n\n\n";

	f1->new_number(pi, e);

	cout << "pi (1024 digits) + e (1024 digits) = " << f1->addition() << "\n\n";
	cout << "pi * e = " << f1->multiplication() << "\n\n";
	cout << "pi - e = " << f1->subtraction() << "\n\n\n\n";
	cout << "Last answer: " << f1->current_result() << "\n\n";

	delete f1;

	end = clock();

	double time_taken = double(end - start) / double(CLOCKS_PER_SEC);

	cout << "Time taken by program is : " << fixed << time_taken << setprecision(5) << " seconds. \n";
	return 0;
}
